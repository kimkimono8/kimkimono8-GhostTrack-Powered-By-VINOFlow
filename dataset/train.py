from ultralytics import YOLO
from pathlib import Path

# -------------------------------
# ‚öôÔ∏è CONFIG
# -------------------------------
MODEL_NAME = "yolov8n.pt"  # ‚úÖ ‡πÉ‡∏ä‡πâ base model ‡πÅ‡∏ö‡∏ö clean ‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ñ‡∏•‡∏≤‡∏™‡∏ù‡∏±‡∏á
DATA_YAML = "D:/GhostTrack-Powered By VINOFlow/GhostTrack/dataset/dataset.yaml"

EPOCHS = 300
IMG_SIZE = 1280
BATCH_SIZE = 8
DEVICE = 0  # ‡∏´‡∏£‡∏∑‡∏≠ 'cuda:0'

PROJECT_NAME = "runs"
RUN_NAME = "train_GhostTrack_Clean"


# -------------------------------
# üöÄ TRAINING
# -------------------------------
def train():
    print("üöÄ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡πÄ‡∏ó‡∏£‡∏ô YOLOv8n ‡πÅ‡∏ö‡∏ö‡∏Ñ‡∏•‡∏µ‡∏ô‡∏à‡∏≤‡∏Å 0 ...")

    if not Path(DATA_YAML).exists():
        print(f"[‚ùå] ‡πÑ‡∏°‡πà‡∏û‡∏ö data.yaml: {DATA_YAML}")
        return

    # ‚úÖ ‡πÇ‡∏´‡∏•‡∏î base YOLOv8 model ‡πÅ‡∏ö‡∏ö clean ‡πÇ‡∏î‡∏¢‡πÑ‡∏°‡πà preload .pt ‡∏ó‡∏µ‡πà‡πÄ‡∏Ñ‡∏¢‡∏ù‡∏±‡∏á class ‡πÄ‡∏î‡∏¥‡∏°
    model = YOLO(MODEL_NAME)

    try:
        model.train(
            data=DATA_YAML,
            epochs=EPOCHS,
            imgsz=IMG_SIZE,
            batch=BATCH_SIZE,
            pretrained=False,  # ‚úÖ ‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç: ‡πÄ‡∏ó‡∏£‡∏ô‡∏à‡∏≤‡∏Å 0 ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πâ class structure ‡πÄ‡∏î‡∏¥‡∏°
            lr0=0.002,
            lrf=0.0001,
            warmup_epochs=10,
            warmup_bias_lr=0.05,
            weight_decay=0.0008,
            cos_lr=True,
            momentum=0.97,
            dropout=0.2,
            patience=0,
            multi_scale=True,
            rect=True,
            hsv_h=0.02,
            hsv_s=0.6,
            hsv_v=0.3,
            scale=0.4,
            fliplr=0.5,
            flipud=0.1,
            mosaic=0.2,
            mixup=0.2,
            cutmix=0.1,
            cache="disk",
            plots=True,
            save=True,
            save_period=1,
            project=PROJECT_NAME,
            name=RUN_NAME,
            resume=False,
            verbose=True,
        )

    except Exception as e:
        print(f"[üî• ERROR] Training failed: {e}")
        return

    print(f"‚úÖ ‡πÄ‡∏ó‡∏£‡∏ô‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß! ‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏≠‡∏¢‡∏π‡πà‡∏ó‡∏µ‡πà: {PROJECT_NAME}/{RUN_NAME}/weights")


if __name__ == "__main__":
    train()
